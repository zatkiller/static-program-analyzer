procedure p1 {
    while ((v1 != v2) && (v1 < v2)) {
        read v1;
        while (v2 != 3) {
            if (v1 > 9) then {
                read v3;
                v2 = v1 + v3;
                print v2;
                call p2;
            } else {
                if (v1 == v2) then {
                    read v3;
                } else {
                    call p2;
                }
            }
        }
        v1 = v2 + v3 + v4;
    }
    call p2;
}
procedure p2 {
    read v1;
    print v4;
    print v1;
    print v2;
    if (v2 > v1) then {
        v1 = v2 * v4;
    } else {
        v4 = v1 * v2;
    }
    v9 = v1 + v2;
}
procedure p3 {
    call p2;
    if (v4 != v1) then {
        call p2;
    } else {
        while (v4 > v1) {
            read v4;
            v5 = v4 + v1;
        }
    }
    v2 = v4 + v5;

    call p2;
    v2 = v4 + v5;
}



procedure p4 {
    read v1;
    print v1;
    if (v2 > v3) then {
        print v5;
    } else {
        read v4;
    }
    v2 = v4 + v5 + v3;
}

procedure p5 {
    while (v1 != v4) {
        call p4;
    }
    while (v1 != v4) {
        call p4;
    }
    if (v1 != v4) then {
        read v5;
    } else {
        read v4;
    }
    v5 = v2 + v1 + v4;
}